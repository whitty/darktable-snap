name: darktable
version: git
summary: Virtual lighttable and darkroom for photographers
description: |
  Darktable is an open source photography workflow application and RAW
  developer. A virtual lighttable and darkroom for photographers. It manages
  your digital negatives in a database, lets you view them through a zoomable
  lighttable and enables you to develop raw images and enhance them.

grade: stable
confinement: strict
base: core18

architectures:
  - build-on: amd64
  - build-on: arm64
  - build-on: ppc64el

apps:
  darktable:
    command: usr/bin/darktable --datadir $SNAP/usr/share/darktable --moduledir $SNAP/usr/lib/$SNAPCRAFT_ARCH_TRIPLET/darktable --configdir $SNAP_USER_DATA --localedir $SNAP/usr/share/locale
    extensions: [gnome-3-28]
    plugs:
      - opengl
      - home
      - removable-media
      - password-manager-service
      - network
      - network-bind

parts:

  lensfun:
    plugin: cmake
    source: https://github.com/lensfun/lensfun.git
    source-commit: v0.3.95
    configflags:
      - -DCMAKE_BUILD_TYPE=Release
      - -DCMAKE_INSTALL_PREFIX=/usr
      - -DBINARY_PACKAGE_BUILD=On

    build-packages:
      - python3
      - libglib2.0-dev
      - libpng-dev

    override-build: |
      snapcraftctl build
      # run lensfun-update-data and update lens data
      PYTHONPATH=${SNAPCRAFT_PART_INSTALL}/usr/lib/python3.6/site-packages/ lensfun-update-data || true
      mv -v /var/lib/lensfun-updates/version_2/*.xml ${SNAPCRAFT_PART_INSTALL}/usr/share/lensfun/version_2
      rm -rf /var/lib/lensfun-updates/version_2

  darktable:
    plugin: cmake
    after:
      - lensfun
    source: https://github.com/darktable-org/darktable/releases/download/release-3.2.1/darktable-3.2.1.tar.xz
    source-checksum: sha256/6e3683ea88dc0a0271be7eca4fd594b9e46b1b7194847825a8d0a0c12bdeb90c
    configflags:
      - -DCMAKE_BUILD_TYPE=Release

      # Place the data alongside that coming from stage-packages (e.g. the lensfun database)
      - -DCMAKE_INSTALL_PREFIX=/usr

      # Support Lua scripts by way of internal Lua implementation
      - -DDONT_USE_INTERNAL_LUA=Off

      # Don't overly optimize for build CPU-- stay generic
      - -DBINARY_PACKAGE_BUILD=On

      # Not sure why staged libs aren't available to CMAKE by default.
      # Is there a better way to include this?
      - -DLensFun_INCLUDE_DIR=${SNAPCRAFT_STAGE}/usr/include/lensfun
      - -DLensFun_LIBRARY=${SNAPCRAFT_STAGE}/usr/lib/${SNAPCRAFT_ARCH_TRIPLET}/liblensfun.so

    build-packages:
      - gcc
      - g++
      - intltool
      - xsltproc
      - libgtk-3-dev
      - libxml2-utils
      - libxml2-dev
      - librsvg2-dev
      - libsqlite3-dev
      - libcurl4-gnutls-dev
      - libjpeg-dev
      - libtiff5-dev
      - liblcms2-dev
      - libjson-glib-dev
      - libexiv2-dev
      - libpugixml-dev
      - libsoup2.4-dev
      - libopenexr-dev
      - libwebp-dev
      - libflickcurl-dev
      - libopenjp2-7-dev
      - libsecret-1-dev
      - libgraphicsmagick1-dev
      - libsdl1.2-dev
      - libsdl-image1.2-dev
      - libgl1-mesa-dev
      - libosmgpsmap-1.0-dev

      # Disabled capabilities for now due to interfaces:
      #
      # Camera detection/tethering/importing doesn't work, with no denials.
      # Need to investigate further before enabling this.
      # - libgphoto2-dev
      #
      # Need to test with cups-control interface
      # - libcups2-dev

      # No colord interface
      # - libcolord-dev
      # - libcolord-gtk-dev

    stage-packages:
      - libexiv2-14
      - libflickcurl0
      - libgomp1
      - libgraphicsmagick-q16-3
      - libilmbase12
      - libopenexr22
      - libopenjp2-7
      - libosmgpsmap-1.0-1
      - libpugixml1v5
      - libwebpmux3
      - libwmf0.2-7
      - libsecret-1-0
